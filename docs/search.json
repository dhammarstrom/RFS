[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R for Scientific Visualization, Collaboration and Thinking",
    "section": "",
    "text": "Preface\nThe purpose of this collection of workshops is to provide basic skills and understanding of scientific visualization, collaboration, and thinking. These concepts are often not taught explicitly in postgraduate courses. Instead, they are assumed to be known and understood or somehow magically infused in students through their respective scientific environments. Instead of relying on magic, professional skills should be taught and developed continuously, explicitly, and systematically.\nThe first workshop deals with data visualization which is a fundamental skill for any scientist. Data visualization, like writing, serves multiple purposes in day-to-day scientific practice. Making graphs before data collection can help the researcher better formulate the scientific problem or explain core concepts for oneself, committees or funding agencies. Visualizations will also be important for exploratory data analysis, for discovering problematic data formatting or important patterns related to the scientific problem. Lastly, visualizations will aid in communicating scientific results to other researchers and the public.\nTwo workshops are devoted to collaboration in data-intensive science. The first workshop deals with the basics of version control and the second workshop deals with structuring collected data into data packages for analysis and sharing. Version control is a way to keep track of changes in a set of files. It also provides opportunities for effective collaboration in complex projects. Using the R package system for data management and sharing is a way to ensure that data is well documented and downstream analyses are reproducible.\nThe last workshop deals with how we can develop scientific thinking using scientific models and data simulations. We will use graphical models to draw out assumptions and explore simulations as a way to test the robustness of our models and plan experiments."
  },
  {
    "objectID": "data-viz.html#a-grammar-of-graphics---ggplot2",
    "href": "data-viz.html#a-grammar-of-graphics---ggplot2",
    "title": "1  Data visualization",
    "section": "1.1 A grammar of graphics - ggplot2",
    "text": "1.1 A grammar of graphics - ggplot2\nBuilding on Wilkinsons The Grammar of Graphics (Wilkinson and Wills 2005) Wickham (Wickham 2010, 2016) implemented a graphical grammar to R through the package ggplot2. The idea behind both Wickhams and Wilkinsons formalized syntax is to avoid special cases or duplicate methods and allow for creation of data visualizations based on a set of core components used in all graphics (Wickham 2010; Wilkinson and Wills 2005).\nThe grammar (in the version described by Wickham (Wickham 2010)) has three main components that directly relates to the underlying data of a graph:\n\nLayers\nScales, and\nCoordinates and facets\n\nLayers contain a set of aesthetic (aes) mapping of the data. This means that variables in a data set are mapped to aesthetics such as coordinates, sizes, shapes, colors etc. Mappings of data comes to life by adding geometric objects or representations (geoms). Data are subjected to statistical transformation depending on the geometric representation.\nScales can be used to control aesthetics mappings by determining e.g. color or shape scales.\nThe coordinate system is used to set the two dimensional axes of a simple graph. The coordinate system can also be used to create maps through a polar projection.\nFacets are used to create multiple graphs, or sub-plots on subsets of the data.\nOn top of the data-driven parts of this grammar comes plot annotations. Annotations can be titles, legends, geometric objects etc used to aid interpretation.\n\n1.1.1 Building blocks of a plot\n\n\n\n\n\n\nTable 1.1:  Example data for a ggplot \n  \n    \n    \n      x\n      y\n      shape\n    \n  \n  \n    1.0\n3.0\na\n    2.4\n2.0\na\n    4.0\n5.0\nb\n    5.2\n7.8\nb\n  \n  \n  \n\n\n\n\n\nUsing a similar example as in (Wickham 2010) a basic plot can be broken down into the data (see Table 1.1), geometric objects (see Figure 1.1 A), scales and coordinates and annotations.\n\n\n\n\n\nFigure 1.1: Three components, geometric objects (a), coordinates and scales (b) and plot annotations (c) are constitues of the complete plot (d)\n\n\n\n\n\n\n1.1.2 My first plot"
  },
  {
    "objectID": "data-viz.html#before-plotting",
    "href": "data-viz.html#before-plotting",
    "title": "1  Data visualization",
    "section": "1.2 Before plotting",
    "text": "1.2 Before plotting\n\n1.2.1 Reading data into R\n\n\n1.2.2 The verbs of data wrangling\n\n\n1.2.3 From wide to long and back again"
  },
  {
    "objectID": "data-viz.html#scientific-graphic-design",
    "href": "data-viz.html#scientific-graphic-design",
    "title": "1  Data visualization",
    "section": "1.3 Scientific graphic design",
    "text": "1.3 Scientific graphic design\nTufte (Tufte 2001)\n\nShow the data\nMaximize the data-ink ratio\nErase non-data ink\nErase redundant data ink\nRevise and edit\n\n\n1.3.1 Chartjunk\nSee ggpattern etc for creating chart junk with ggplot2\n\n\n1.3.2 Minimizing\nSee ggthemes for range-frame as suggested in tufte Ch 6. Manually minimize summary displays such as boxplots…\n\n\n1.3.3 Labels and annotations\nUsing ggtext to format labels etc.\n\n\n1.3.4 Glamorous graphics\nIn a talk at RStudio conference in 2020, Will Chase presented principles related to glamorous graphics.\nWhy glamorous graphics? - Engage a wider audience - Aesthetics matters for understanding - “respecting the audience”\nThe glamour of graphics uses color, typography and layout to increase the impact of the graphic.\n\n\n1.3.5 Layout\n\n1.3.5.1 Alignment\nTop left align titles\nText should be horizontal\nAxis labels should also be horizontal\nAlignment should provide clean lines and symmetry\nSome alignment can be left/center/right to provide overall structure to the graph.\n\n\n1.3.5.2 Border, Grid lines, legends\nDo not use borders or grid lines. If grid lines, make them lighter and more subtle.\nAvoid legends, labels of the data are better or titles with color.\n\n\n1.3.5.3 White space\nUse white space to separate elements of the graph and give the reader room to understand the graph.\n\n\n\n1.3.6 Typography\n\n1.3.6.1 Fonts\n\n\n1.3.6.2 Hierarchy\nThis gives the reader a hierarchy of information.\n\n\n\n1.3.7 Color\nWhat colors look good together?\n\n# Load required libraries\nlibrary(ggplot2)\n\n# Create a data frame of angles and radii\nangles &lt;- seq(0, 360, by = 0.1)\nradii &lt;- seq(0.1, 1, by = 0.1)  # Vary the starting point to avoid a point at the center\ndf &lt;- expand.grid(angle = angles, radius = radii)\n\n# Create ggplot of colored points in polar coordinates\np &lt;- ggplot(df, aes(x = angle, y = radius, color = angle, alpha = radius)) +\n  geom_point(size = 8) +\n  scale_color_gradientn(colors = rainbow(360)) +\n  scale_alpha_continuous(range = c(1, 0.1)) +\n  coord_polar(theta = \"x\") +\n  theme_void() +\n  theme(axis.text = element_blank(),\n        axis.title = element_blank(),\n        axis.ticks = element_blank(),\n        legend.position = \"none\")\n  \n\n#### Alternative\n\n# Create a data frame of angles from 0 to 360\nangles &lt;- seq(0, 360, by = 0.2)\ndf &lt;- data.frame(angle = angles)\n\n# Create ggplot of colored points in polar coordinates\np &lt;- ggplot(df, aes(x = angle, y = 1, color = angle)) +\n  geom_point(size = 10) +\n  scale_color_gradientn(colors = rainbow(360)) +\n  coord_polar(theta = \"x\") +\n  theme_void() +\n  theme(axis.text = element_blank(),\n        axis.title = element_blank(),\n        axis.ticks = element_blank(),\n        legend.position = \"none\")\n\nThe color wheel can be used to find\n\nComplementary colors that will give high contrast\nMonochromatic will give harmonious\n\nAnalogous are choosen from the same side on the color wheele colors to avoid contrast but still enable showing differences\nTriadic colors to give more\n\n\n\n1.3.7.1 Describing colors, Hue, Saturation and Lightness\n\n\n1.3.7.2 Background colors\nColors can help reduce “hardness” by avoiding a white background.\n\n\n\n\nGelman, Andrew, Cristian Pasarica, and Rahul Dodhia. 2002. “Let’s Practice What We Preach.” The American Statistician 56 (2): 121–30. https://doi.org/10.1198/000313002317572790.\n\n\nTufte, Edward R. 2001. The Visual Display of Quantitative Information. 2. edition. Cheshire, Conn.: Graphics Press.\n\n\nWickham, Hadley. 2010. “A Layered Grammar of Graphics.” Journal of Computational and Graphical Statistics 19 (1): 3–28. https://doi.org/10.1198/jcgs.2009.07098.\n\n\n———. 2016. Ggplot2 : Elegant Graphics for Data Analysis. 2nd ed. Use r!,. Cham: Springer International Publishing : Imprint: Springer,. https://doi.org/10.1007/978-3-319-24277-4.\n\n\nWilkinson, Leland, and Graham Wills. 2005. The Grammar of Graphics. 2nd ed. Statistics and Computing. New York: Springer."
  },
  {
    "objectID": "version-control.html#introduction-to-git-and-github",
    "href": "version-control.html#introduction-to-git-and-github",
    "title": "2  Version control and collaborative scientific coding",
    "section": "2.1 Introduction to git and GitHub",
    "text": "2.1 Introduction to git and GitHub"
  },
  {
    "objectID": "version-control.html#a-workflow-for-a-scientific-paper",
    "href": "version-control.html#a-workflow-for-a-scientific-paper",
    "title": "2  Version control and collaborative scientific coding",
    "section": "2.2 A workflow for a scientific paper",
    "text": "2.2 A workflow for a scientific paper\n\n2.2.1 The final result\n\n\n2.2.2 Initial setup\n\n\n2.2.3 Repositories and branches\n\n\n2.2.4 Milestones, issues, and pull requests\n\n\n2.2.5 A style guide for scientific coding\nWe adhere to the tidyverse style guide. The following is a summary of the most important points with some modifications.\n\n\n2.2.6 Publishing"
  },
  {
    "objectID": "writing-packages.html#increased-reproducibility",
    "href": "writing-packages.html#increased-reproducibility",
    "title": "3  R packages for data management and sharing",
    "section": "3.1 Increased reproducibility",
    "text": "3.1 Increased reproducibility\nA basic principle in reproducible research is that the data and code used to generate results should be made available to others."
  },
  {
    "objectID": "writing-packages.html#r-package-basics",
    "href": "writing-packages.html#r-package-basics",
    "title": "3  R packages for data management and sharing",
    "section": "3.2 R package basics",
    "text": "3.2 R package basics\n\n3.2.1 Incorporating data into R packages\n\n\n3.2.2 Documenting data"
  },
  {
    "objectID": "writing-packages.html#sharing-packages",
    "href": "writing-packages.html#sharing-packages",
    "title": "3  R packages for data management and sharing",
    "section": "3.3 Sharing packages",
    "text": "3.3 Sharing packages"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Gelman, Andrew, Cristian Pasarica, and Rahul Dodhia. 2002. “Let’s\nPractice What We Preach.” The American Statistician 56\n(2): 121–30. https://doi.org/10.1198/000313002317572790.\n\n\nTufte, Edward R. 2001. The Visual Display of Quantitative\nInformation. 2. edition. Cheshire, Conn.: Graphics Press.\n\n\nWickham, Hadley. 2010. “A Layered Grammar of Graphics.”\nJournal of Computational and Graphical Statistics 19 (1): 3–28.\nhttps://doi.org/10.1198/jcgs.2009.07098.\n\n\n———. 2016. Ggplot2 : Elegant Graphics for Data Analysis. 2nd\ned. Use r!,. Cham: Springer International Publishing : Imprint:\nSpringer,. https://doi.org/10.1007/978-3-319-24277-4.\n\n\nWilkinson, Leland, and Graham Wills. 2005. The Grammar of\nGraphics. 2nd ed. Statistics and Computing. New York: Springer."
  }
]